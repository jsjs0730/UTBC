<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="tk.utbc.mapper.ReplyMapper">
       	<!-- 부모 댓글 -->
       	<insert id="create">
       		insert into tbl_reply (bnum, replytext, replyer, idx, depth, depthCnt)
			values (#{bnum}, #{replytext}, #{replyer}, #{idx}, #{depth}, 0);
			insert into tbl_reply_sequence (rnum) values (last_insert_id()); 
			insert into tbl_point_log (uid, bname, bnum, rnum, chk)  
  			values(#{uid}, (select bname from tbl_board where bnum = #{bnum}), #{bnum}, last_insert_id(), 'rck');  
    	</insert> 
		<select id="getRnum" resultType="int">
			select max(rnum) from tbl_reply_sequence
		</select>
    	<update id="updateIdxAndDepth">
    		update tbl_reply set idx=#{idx} , depth=#{depth}, depthCnt=#{depthCnt} where rnum = #{rnum}
    	</update>
		
		
		
		<!-- 대댓글 -->
		<select id="getMaxDepth" resultType="Integer">
		<!-- 무조건 depth + @ 형태로 날아온다 (대댓글 이기 때문에) -->
		select max(cast(substring_index(depth, '@', -1) as unsigned)) from tbl_reply where 
			depth regexp concat(#{depth}, '[0-9]*[^@]$')
		order by depth;
		</select>
		
		<insert id="createReReply">
			insert into tbl_reply(bnum, replytext, replyer, idx, depth, depthCnt)
			values (
			 #{bnum},
			 #{replytext},
			 #{replyer},
			 #{idx},
			 #{depth},
			 #{depthCnt});
			 insert into tbl_reply_sequence (rnum) values (last_insert_id());
			 insert into tbl_point_log (uid, bname, bnum, rnum, chk)  
  			 values(#{uid}, (select bname from tbl_board where bnum = #{bnum}), #{bnum}, last_insert_id(), 'rck');
		</insert>
    	
		
		<!-- 목록 -->
    	<select id="listPage" resultType="ReplyVO">
			select * from tbl_reply
			where bnum=#{bnum}
			order by depth    
			limit #{cri.pageStart}, #{cri.perPageNum}	
    	</select>

		<!-- 수정 -->
    	<update id="update">
			update tbl_reply set replytext = #{replytext} , updatedate=now()
			where rnum=#{rnum}    	
    	</update>
    	
    	<!-- 삭제 -->    	
    	<delete id="delete">
			delete from tbl_reply where rnum=#{rnum}    	
    	</delete>
   
		<!-- 댓글수(페이징용) -->
    	<select id="count" resultType="int">
    	<!-- 트랜잭션이 걸리는 시점부터는 tbl_board만을 이용해서 처리해야한다 -->
			select count(bnum) from tbl_reply where bnum=#{bnum}
			<!-- update tbl_board set replycnt = 
				(select count(rnum)
					from
					tbl_reply
					where bnum = tbl_board.bnum) where bnum > 0; -->
			
    	</select>
    	<!-- 댓글수(게시판표시용) -->
    	<select id="getBnum" resultType="int">
    		select bnum from tbl_reply where rnum = #{rnum}    	
    	</select> 	
    </mapper>