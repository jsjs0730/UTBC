<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
	<http auto-config="true" use-expressions="true">
	<headers>
        <frame-options policy="SAMEORIGIN"/><!-- smarteditor x-frame-options deny로 iframe접근하지 못하는현상 -->
    </headers>
		<intercept-url pattern="/admin/listPage" access="hasAuthority('admin')"></intercept-url>
		<intercept-url pattern="/board/insert" access="hasAnyAuthority('admin','normal')"></intercept-url>
		<intercept-url pattern="/board/modifyPage" access="hasAnyAuthority('admin', 'normal')"></intercept-url>
		<intercept-url pattern="/board/replies/add" access="hasAnyAuthority('admin', 'normal')"></intercept-url>
		<intercept-url pattern="/board/replies/addReReply" access="hasAnyAuthority('admin', 'normal')"></intercept-url>
		<intercept-url pattern="/board/replies/update/*" access="hasAnyAuthority('admin', 'normal')"></intercept-url>
		<intercept-url pattern="/board/replies/delete/*" access="hasAnyAuthority('admin', 'normal')"></intercept-url>
		<intercept-url pattern="/board/replies/com/*/*" access="permitAll"></intercept-url>
		<intercept-url pattern="/login" access="isAnonymous()"/>
		<intercept-url pattern="/resources/**" access="permitAll"/>
		<intercept-url pattern="/home" access="permitAll"/>
		<intercept-url pattern="/**" access="permitAll"/>
		<form-login
			username-parameter="uid"
			password-parameter="upw"
			login-page="/login"
			default-target-url="/"
				authentication-success-handler-ref="customAuthenticationSuccessHandler"
				authentication-failure-handler-ref="customAuthenticationFailureHandler"
			/>
		<remember-me key="rmkey" token-validity-seconds="600"/><!-- 10min = 600sec -->
		<logout
				logout-success-url="/"
				invalidate-session="true"
				delete-cookies="JSEESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"		
			/>	<!-- 명시적으로 ,SPRING_SECURITY_REMEMBER_ME_COOKIE 를 추가하여 쿠키를 삭제할 수도 있다.  -->
	</http>
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>		
	<authentication-manager>
		<authentication-provider user-service-ref="customJdbcDaoImpl">
			<password-encoder ref="bcryptPasswordEncoder"></password-encoder>
			<!-- 외부에서 bean을 불러와
			 로그인 할 때 사용자가 입력한 문자열을 암호화 시켜 DB에 등록되어있는 암호화 된 문자열과 비교,
			  입력한 문자열을 암호화된 문자열로 바꾸는 기능도 사용가능 -->
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="customAuthenticationSuccessHandler" class="tk.utbc.handler.CustomAuthenticationSuccessHandler">
		<beans:property name="targetUrlParameter" value="loginRedirect"></beans:property>
		<beans:property name="useReferer" value="false"></beans:property>
		<beans:property name="defaultUrl" value="/"></beans:property>	
	</beans:bean>
	<beans:bean id="customAuthenticationFailureHandler" class="tk.utbc.handler.CustomAuthenticationFailureHandler">
		<beans:property name="loginidname" value="uid"></beans:property>
		<beans:property name="loginpasswordname" value="upw"></beans:property>
		<beans:property name="loginredirectname" value="loginRedirect"></beans:property>
		<beans:property name="exceptionmsgname" value="securityexceptionmsg"></beans:property>
		<beans:property name="defaultFailureUrl" value="/login?fail=true"></beans:property>
	</beans:bean>
	<beans:bean id="customJdbcDaoImpl" class="tk.utbc.dao.CustomJdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="rolePrefix" value=""></beans:property>
		<beans:property name="usersByUsernameQuery" value="select uid, upw, uname, email, birthdate, joindate, gender, profile_picture, filesrc, profile_content  from tbl_member where uid =?"></beans:property>
		<beans:property name="authoritiesByUsernameQuery" value="select authority from tbl_member_authority where uid = ?"></beans:property>
		<beans:property name="enableGroups" value="false"></beans:property>
	</beans:bean>	
</beans:beans>
